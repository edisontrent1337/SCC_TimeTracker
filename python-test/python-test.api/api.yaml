openapi: 3.0.0
info:
  version: 0.0.2
  title: Python Test Service

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    questionWeight:
      properties:
        weight:
          type: integer
    testProgress:
      properties:
        studentsThatAnswered:
          type: integer
        totalStudents:
          type: integer
    participants:
      description: The list of matriculation numbers allowed to participate
      properties:
        matriculationNumbers:
          type: array
          items:
            type: integer
    testResultSummary:
      description: The summary of all existing test result, consisting of the csv and the number of answers
      properties:
        csv:
          type: string
        count:
          type: integer
    correctAnswers:
      description: The correct answer array that can be set by the admin
      properties:
        answers:
          type: array
          items:
            type: integer

    testResult:
      description: A test result of the robolab python test
      properties:
        matriculationNumber:
          type: integer
          description: The matriculation number
        studies:
          type: string
          description: The course of studies
        groupNumber:
          type: integer
          description: The students group number
        selfEvaluation1:
          type: string
          description: Result of self evaluation question 1
        selfEvaluation2:
          type: string
          description: Result of self evaluation question 1
        answers:
          type: array
          items:
            type: integer
    operationResponse:
      properties:
        error:
          type: string
          description: Used to indicate error messages. Null if no error occured
        data:
          type: array
          description: Attached data of response
          items:
            type: object
paths:

  /pytest/config/roomAssignment:
    post:
      security:
      - bearerAuth: []
      operationId: setRooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /pytest/config/answers:
    post:
      security:
      - bearerAuth: []
      operationId: setCorrectAnswers
      requestBody:
        description: Sets the correct answers string.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/correctAnswers"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /pytest/config/weight:
    post:
      security:
      - bearerAuth: []
      operationId: setQuestionWeight
      requestBody:
        description: Sets the weight for difficult questions
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/questionWeight"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /pytest/config/participants:
    post:
      security:
      - bearerAuth: []
      operationId: setParticipants
      description: Sets the marticle numbers of allowed participants.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/participants"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
    delete:
      security:
      - bearerAuth: []
      operationId: removeAllParticipants
      description: Removes all participants from the database.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
  /pytest/enter:
    post:
      operationId: enterTest
      description: Authorizes users that want to access the python test.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/participants"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
  /pytest/conclude:
    get:
      operationId: concludeTest
      description: Ends the test
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /pytest/reset:
    get:
      operationId: resetTest
      description: Resets the given answers in the database
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /pytest/results:
    get:
      operationId: getAllTestResults
      description: Returns all testResults
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /pytest/results/{matriculationNumber}:
    get:
      operationId: getTestResultForStudent
      description: Returns test result for a given student
      parameters:
      - name: matriculationNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /pytest/progress:
    get:
      operationId: getTestProgress
      description: Returns the test progress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
  /pytest/submit:
    post:
      security:
      - bearerAuth: []
      operationId: createTestResult
      requestBody:
        description: Creates a new test result.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/testResult"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
    put:
      security:
      - bearerAuth: []
      operationId: updateTestResult
      description: Updates a given test result
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/testResult"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
