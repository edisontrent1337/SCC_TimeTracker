openapi: 3.0.0
info:
  version: 0.0.1
  title: Timing Service

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    activity:
      description: An activity that can be tracked
      properties:
        name:
          type: string
          description: The name of the activity
        tag:
          type: string
          description: The tag of the activity
        state:
          type: string
          description: The state of the activity
        duration:
          type: integer
          description: The duration of the activity
        uuid:
          type: string
          description: The uuid of the activity
        description:
          type: string
          description: The description of the activity
        owneruuid:
          type: string
          description: The uuid of the user that owns this activity

    operationResponse:
      properties:
        error:
          type: string
          description: Used to indicate error messages. Null if no error occured
        data:
          type: array
          description: Attached data of response
          items:
            type: object

    activityRecord:
      description: A record of an activity that a user has submitted
      properties:
        activityuuid:
          type: string
          description: The uuid of the activity.
        activityName:
          type: string
          description: The name of the activity.
        time:
          type: string
          format: date-time
          description: The point in time a record update was issued (e.g. the request was sent to the server)
        startTime:
          type: string
          format: date-time
          description: The point in time this record was created
        endTime:
          type: string
          format: date-time
          description: The point in time this record ended
        uuid:
          type: string
          description: The uuid of this record
        duration:
          type: integer
          description: The duration of the record
        tag:
          type: string
          description: The tag of the activity
        state:
          type: string
          enum:
          - STARTED
          - ENDED
paths:
  /activities/:
    post:
      security:
      - bearerAuth: []
      operationId: createActivity
      requestBody:
        description: Creates a new activity.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/activity"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

    get:
      operationId: getActivities
      description: Returns all activities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
    put:
      security:
      - bearerAuth: []
      operationId: updateActivity
      description: Updates the activity meta data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/activity"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /activities/{activityId}:
    get:
      security:
      - bearerAuth: []
      operationId: getActivity
      description: Returns activity with given id
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

    delete:
      security:
      - bearerAuth: []
      operationId: deleteAcitity
      description: Removes an activity with given id and all its associated records from the database.
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"



  /activities/{activityId}/records:
    get:
      security:
      - bearerAuth: []
      operationId: getActivityRecords
      description: Returns all records for an activity
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

    post:
      security:
      - bearerAuth: []
      operationId: addActivityRecord
      description: Triggers start or end of a record for a given activityID
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /activities/records:
    get:
      security:
      - bearerAuth: []
      operationId: getRecords
      description: Returns all records for a user
      parameters:
      - in: query
        name: tag
        schema:
          type: string
        description: The tag filter for user records
      - in: query
        name: activityUuid
        schema:
          type: string
        description: The uuid of the activity of interest
      - in: query
        name: state
        schema:
          type: string
        description: The state of the record
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"

  /activities/stats:
    get:
      security:
      - bearerAuth: []
      operationId: getGlobalActivityStats
      description: Returns statistics for this application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationResponse"
